Beginning tests Tuesday, June 26, 2012 2:25:28 PM

Beginning tests using document "medium document (wiki-cheese, about 170k)"

Beginning tests using document "medium document (wiki-cheese, about 170k)"

>>> Comparison for "CSS selector: { [type] }"
>>> Selector returning 23 elements.
-----------------------
"CsQuery": 27350 iterations per second (54700 in 2 seconds)
"Fizzler": 448 iterations per second (900 in 2 seconds)
-----------------------
>>> WINNER: "CsQuery" -- 61.05 times faster than next best performer (Fizzler)

Beginning tests Tuesday, June 26, 2012 2:25:33 PM

>>> Comparison for "CSS selector: { input[type] }"
>>> Selector returning 2 elements.
-----------------------
"CsQuery": 42334 iterations per second (84668 in 2 seconds)
"Fizzler": 644.6 iterations per second (1302 in 2 seconds)
-----------------------
>>> WINNER: "CsQuery" -- 65.68 times faster than next best performer (Fizzler)

>>> Comparison for "CSS selector: { input[type][checked] }"
>>> Selector returning 0 elements.
-----------------------
"CsQuery": 35256.5 iterations per second (70513 in 2 seconds)
"Fizzler": 608.1 iterations per second (1218 in 2 seconds)
-----------------------
>>> WINNER: "CsQuery" -- 57.98 times faster than next best performer (Fizzler)

>>> Comparison for "CSS selector: { #body }"
>>> Selector returning 1 elements.
-----------------------
"CsQuery": 83051 iterations per second (166102 in 2 seconds)
"Fizzler": 437.1 iterations per second (900 in 2.1 seconds)
-----------------------
>>> WINNER: "CsQuery" -- 190 times faster than next best performer (Fizzler)

>>> Comparison for "CSS selector: { #button }"
>>> Selector returning 1 elements.
-----------------------
"CsQuery": 79524 iterations per second (159048 in 2 seconds)
"Fizzler": 436.7 iterations per second (903 in 2.1 seconds)
-----------------------
>>> WINNER: "CsQuery" -- 182.12 times faster than next best performer (Fizzler)

>>> Comparison for "CSS selector: { #missing }"
>>> Selector returning 0 elements.
-----------------------
"CsQuery": 108906.5 iterations per second (217813 in 2 seconds)
"Fizzler": 437.9 iterations per second (903 in 2.1 seconds)
-----------------------
>>> WINNER: "CsQuery" -- 248.69 times faster than next best performer (Fizzler)

>>> Comparison for "Create DOM from html"
-----------------------
"CsQuery": 23.4 iterations per second (48 in 2.1 seconds)
"Fizzler": 62.2 iterations per second (125 in 2 seconds)
-----------------------
>>> WINNER: "Fizzler" -- 2.66 times faster than next best performer (CsQuery)

>>> Comparison for "CSS selector: { * }"
>>> Selector returning 2297 elements. NOTE: HAP returned 2286 elements
-----------------------
"CsQuery": 252.3 iterations per second (525 in 2.1 seconds)
"Fizzler": 562.6 iterations per second (1155 in 2.1 seconds)
-----------------------
>>> WINNER: "Fizzler" -- 2.23 times faster than next best performer (CsQuery)

>>> Comparison for "CSS selector: { div:nth-child(3) }"
>>> Selector returning 7 elements.
-----------------------
"CsQuery": 1629 iterations per second (3320 in 2 seconds)
"Fizzler": 567.2 iterations per second (1144 in 2 seconds)
-----------------------
>>> WINNER: "CsQuery" -- 2.87 times faster than next best performer (Fizzler)

>>> Comparison for "CSS selector: { div:nth-child(2n+1) }"
>>> Selector returning 68 elements. NOTE: HAP returned 0 elements
-----------------------
"CsQuery": 1390.1 iterations per second (2840 in 2 seconds)
"Fizzler": Failed, error: "Unexpected token {Ident} where {Char: )} was expected."
-----------------------
>>> WINNER: "CsQuery" -- -- times faster than next best performer (Fizzler)

>>> Comparison for "CSS selector: { div:nth-last-child(3) }"
>>> Selector returning 8 elements. NOTE: HAP returned 0 elements
-----------------------
"CsQuery": 1337 iterations per second (2698 in 2 seconds)
"Fizzler": Failed, error: "Unknown functional pseudo 'nth-last-child'. Only nth-child is supported."
-----------------------
>>> WINNER: "CsQuery" -- -- times faster than next best performer (Fizzler)

>>> Comparison for "CSS selector: { div:nth-last-child(2n+1) }"
>>> Selector returning 91 elements. NOTE: HAP returned 0 elements
-----------------------
"CsQuery": 1141.3 iterations per second (2375 in 2.1 seconds)
"Fizzler": Failed, error: "Unknown functional pseudo 'nth-last-child'. Only nth-child is supported."
-----------------------
>>> WINNER: "CsQuery" -- -- times faster than next best performer (Fizzler)

>>> Comparison for "CSS selector: { div > span }"
>>> Selector returning 37 elements.
-----------------------
"CsQuery": 2063.1 iterations per second (4250 in 2.1 seconds)
"Fizzler": 602.1 iterations per second (1218 in 2 seconds)
-----------------------
>>> WINNER: "CsQuery" -- 3.43 times faster than next best performer (Fizzler)

>>> Comparison for "CSS selector: { div span:first-child }"
>>> Selector returning 196 elements.
-----------------------
"CsQuery": 633.6 iterations per second (1302 in 2.1 seconds)
"Fizzler": 221.4 iterations per second (462 in 2.1 seconds)
-----------------------
>>> WINNER: "CsQuery" -- 2.86 times faster than next best performer (Fizzler)

>>> Comparison for "CSS selector: { div span:last-child }"
>>> Selector returning 190 elements.
-----------------------
"CsQuery": 644.6 iterations per second (1302 in 2 seconds)
"Fizzler": 220.8 iterations per second (462 in 2.1 seconds)
-----------------------
>>> WINNER: "CsQuery" -- 2.92 times faster than next best performer (Fizzler)

>>> Comparison for "CSS selector: { div > span:last-child }"
>>> Selector returning 5 elements.
-----------------------
"CsQuery": 1880.8 iterations per second (3818 in 2 seconds)
"Fizzler": 598.8 iterations per second (1218 in 2 seconds)
-----------------------
>>> WINNER: "CsQuery" -- 3.14 times faster than next best performer (Fizzler)

>>> Comparison for "CSS selector: { div span:only-child }"
>>> Selector returning 65 elements.
-----------------------
"CsQuery": 654.1 iterations per second (1320 in 2 seconds)
"Fizzler": 211.6 iterations per second (440 in 2.1 seconds)
-----------------------
>>> WINNER: "CsQuery" -- 3.09 times faster than next best performer (Fizzler)

Beginning tests using document "medium document (wiki-cheese, about 170k)"


Completed tests Tuesday, June 26, 2012 2:26:33 PM

Beginning tests using document "medium document (wiki-cheese, about 170k)"

